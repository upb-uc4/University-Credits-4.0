name: Lagom Manual Dependency Pipeline

on:
  # manual triggers with parameters
  workflow_dispatch:
    inputs:
        target_service:
            description: "The name of the service which should get published"
            required: true

jobs:
  deploy:
    name: Check dependencies

    runs-on: ubuntu-latest

    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Check out source repository
      uses: actions/checkout@v2
        
    # Set up JDK
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    #change .sbtopts
    - name: Add -J to .sbtops
      run: |
        pushd ./product_code
        echo "-J-Xms512M -J-Xmx4096M -J-Xss2M -J-XX:MaxMetaspaceSize=1024M" > .sbtopts
        popd

    - name: Dependency check
      id: dependency-check
      run: | 
        pushd ./product_code
        service=${{ github.event.inputs.target_service }}
        if sbt "dependencyCheck ${service}"
        then
          echo "::set-output name=FAILURE::0"
        else
          echo "::set-output name=FAILURE::1"
          message=`cat target/dependencyCheck.txt`
          message="${message//'%'/'%25'}"
          message="${message//$'\n'/'%0A'}"
          message="${message//$'\r'/'%0D'}"
          echo "::set-output name=MESSAGE::$message"
          echo "::set-output name=SERVICE::$service"
        fi
        popd
      
    - name: Discord notification
      if: ${{ steps.dependency-check.outputs.FAILURE != 0 }}
      env:
        DISCORD_USERNAME: ${{ steps.dependency-check.outputs.SERVICE }}
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
      uses: Ilshidur/action-discord@master
      with:
        args: ${{ steps.dependency-check.outputs.MESSAGE }}