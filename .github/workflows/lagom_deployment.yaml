name: Lagom Deployment Pipeline

on:
  push:
    tags: [ '*-v*' ]

jobs:
  deploy:
    name: Deploy to DockerHub

    runs-on: ubuntu-latest

    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Check out source repository
      uses: actions/checkout@v2
        
    # Set up JDK
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        
    - name: Login to DockerHub Registry
      run: echo ${{ secrets.DOCKER_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

    #change .sbtopts
    - name: Add -J to .sbtops
      run: |
        pushd ./product_code
        echo "-J-Xms512M -J-Xmx4096M -J-Xss2M -J-XX:MaxMetaspaceSize=1024M" > .sbtopts
        popd
    
    #check tag
    - name: Check Tag
      run: |
        pushd ./product_code
        tag= ${GITHUB_REF#refs/tags/}
        echo "##########################"
        echo "#       check tag        #"
        echo "##########################"
        sbt versionCheck ${tag}
        popd

    #check dependency
    - name: Dependency check
      run: | 
        service=${{ github.event.inputs.target_service }}
        if (sbt dependencyCheck $service); then
          echo "Failure=0" >> $GITHUB_ENV
        else
          echo "Failure=1" >> $GITHUB_ENV
          message=`cat target/dependencyCheck.txt`
          echo "FailureMessage=$message" >> $GITHUB_ENV
          echo "ServiceName=$service" >> $GITHUB_ENV
        fi
    
    #send message
    - name: Discord notification
      if: ${{ env.Failure != 0 }}
      env:
        DISCORD_USERNAME: ${{ env.ServiceName }}
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
      uses: Ilshidur/action-discord@master
      with:
        args: ${{ env.FailureMessage }}
  
    # run sbt docker publish
    - name: Deploy
      run: |
        pushd ./product_code
        tag=${GITHUB_REF#refs/tags/}
        tag=${tag%-v*}
        echo "##########################"
        echo "    deploy ${tag}    "
        echo "##########################"
        sbt ${tag}_service/docker:publish
        popd