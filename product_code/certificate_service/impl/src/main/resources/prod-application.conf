include "application"

uc4.hyperledger {
    walletPath = "/opt/docker/share/hyperledger/wallet_path"
    networkConfig = "/var/libs/configmaps/connection_profile_kubernetes.yaml"
    tlsCert = "/var/secrets/org-cert.pem"
    username = ${HYPERLEDGER_USERNAME}
    password = ${HYPERLEDGER_PASSWORD}
    organisationId = ${HYPERLEDGER_ORGANISATION_ID}
    organisationName = ${HYPERLEDGER_ORGANISATION_NAME}
    channel = ${HYPERLEDGER_CHANNEL}
    chaincode = ${HYPERLEDGER_CHAINCODE}
    caURL = ${HYPERLEDGER_CA_URL}
}

play {
  server {
    pidfile.path = /dev/null
  }

  http.secret.key = ${APPLICATION_SECRET}
}

db.default {
    url = ${POSTGRESQL_URL}
    username = ${POSTGRESQL_USERNAME}
    password = ${POSTGRESQL_PASSWORD}
}

akka {
  # after 60s of unsuccessul attempts to form a cluster,
  # the actor system will shut down
  cluster.shutdown-after-unsuccessful-join-seed-nodes = 60s

  discovery.method = akka-dns

  management.cluster.bootstrap {
    contact-point-discovery {
      discovery-method = kubernetes-api
      service-name = "certificate"
      required-contact-point-nr = ${REQUIRED_CONTACT_POINT_NR}
    }
  }
}

lagom {
  # exit jvm on actor system termination
  # this will allow Kubernetes to restart the pod
  cluster.exit-jvm-when-system-terminated = on
  persistence.jdbc.create-tables.auto = false
}