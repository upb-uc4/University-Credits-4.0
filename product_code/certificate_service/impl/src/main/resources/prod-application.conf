include "application"

uc4.hyperledger {
    walletPath = ${HYPERLEDGER_WALLET_PATH}
    networkConfig = ${HYPERLEDGER_NETWORK_DESCRIPTION_PATH}
    tlsCert = ${HYPERLEDGER_TLS_CERT}
    username = ${HYPERLEDGER_USERNAME}
    password = ${HYPERLEDGER_PASSWORD}
    organisationId = ${HYPERLEDGER_ORGANISATION_ID}
    organisationName = ${HYPERLEDGER_ORGANISATION_NAME}
    channel = ${HYPERLEDGER_CHANNEL}
    chaincode = ${HYPERLEDGER_CHAINCODE}
    caURL = ${HYPERLEDGER_CA_URL}
}

uc4.secrets {
    master = ${UC4_MASTER_SECRET}
    salts {
        kafka = ${UC4_KAFKA_SALT}
    }
}

play {
  server {
    pidfile.path = /dev/null
  }

  http.secret.key = ${APPLICATION_SECRET}
}

db.default {
    url = ${POSTGRESQL_URL}
    username = ${POSTGRESQL_USERNAME}
    password = ${POSTGRESQL_PASSWORD}
}

lagom.persistence.jdbc.create-tables.auto = false

akka {
  discovery.method = akka-dns

  management.cluster.bootstrap {
    contact-point-discovery {
      discovery-method = kubernetes-api
      service-name = "certificate"
      required-contact-point-nr = ${REQUIRED_CONTACT_POINT_NR}
    }
  }
}

# after 60s of unsuccessul attempts to form a cluster,
# the actor system will shut down
akka.cluster.shutdown-after-unsuccessful-join-seed-nodes = 60s

# exit jvm on actor system termination
# this will allow Kubernetes to restart the pod
lagom.cluster.exit-jvm-when-system-terminated = on