include "application"

play {
  server {
    pidfile.path = /dev/null
  }

  http.secret.key = ${APPLICATION_SECRET}
}

uc4 {
    secrets {
      master = ${UC4_MASTER_SECRET}
      salts {
        kafka = ${UC4_KAFKA_SALT}
      }
    }

    pdf {
      keyStorePath = ${?KEYSTORE_PATH}
      certificateEnrollmentHtml = ${?CERTIFICATE_ENROLLMENT_PATH}
      transcriptOfRecordsHtml = ${?TRANSCRIPTION_RECORDS_PATH}
      keyStorePassword = ${?KEYSTORE_PASSWORD}
      certificateAlias = ${?CERTIFICATE_ALIAS}
      tsaURL = ${?TSA_URL}
      address = ${?ADDRESS}
      organization = ${?ORGANIZATION}
    }
}

db.default {
    url = ${POSTGRESQL_URL}
    username = ${POSTGRESQL_USERNAME}
    password = ${POSTGRESQL_PASSWORD}
}

akka {
  # after 60s of unsuccessul attempts to form a cluster,
  # the actor system will shut down
  cluster.shutdown-after-unsuccessful-join-seed-nodes = 60s

  discovery.method = akka-dns

  management.cluster.bootstrap {
    contact-point-discovery {
      discovery-method = kubernetes-api
      service-name = "report"
      required-contact-point-nr = ${REQUIRED_CONTACT_POINT_NR}
    }
  }
}

lagom {
  # exit jvm on actor system termination
  # this will allow Kubernetes to restart the pod
  cluster.exit-jvm-when-system-terminated = on
  persistence.jdbc.create-tables.auto = false
}