include "application"

uc4 {
    hyperledger {
        walletPath = "/opt/docker/share/hyperledger/wallet_path"
        networkConfig = "/var/libs/configmaps/connection_profile_kubernetes.yaml"
        tlsCert = "/var/secrets/org/cert.pem"
        username = ${HYPERLEDGER_USERNAME}
        password = ${HYPERLEDGER_PASSWORD}
        organisationId = ${HYPERLEDGER_ORGANISATION_ID}
        organisationName = ${HYPERLEDGER_ORGANISATION_NAME}
        channel = ${HYPERLEDGER_CHANNEL}
        chaincode = ${HYPERLEDGER_CHAINCODE}
        caURL = ${HYPERLEDGER_CA_URL}
    }

    pdf {
        keyStorePath = "/opt/docker/share/pdf/keystore.jks"
        certificateEnrollmentHtml = "/opt/docker/share/pdf/enrollment.html"
        keyStorePassword = ${?KEYSTORE_PASSWORD}
        certificateAlias = ${?CERTIFICATE_ALIAS}
        tsaURL = ${?TSA_URL}
    }
}

play {
  server {
    pidfile.path = /dev/null
  }

  http.secret.key = ${APPLICATION_SECRET}
}

akka {
  # after 60s of unsuccessul attempts to form a cluster,
  # the actor system will shut down
  cluster.shutdown-after-unsuccessful-join-seed-nodes = 60s

  discovery.method = akka-dns

  management.cluster.bootstrap {
    contact-point-discovery {
      discovery-method = kubernetes-api
      service-name = "matriculation"
      required-contact-point-nr = ${REQUIRED_CONTACT_POINT_NR}
    }
  }
}

# exit jvm on actor system termination
# this will allow Kubernetes to restart the pod
lagom.cluster.exit-jvm-when-system-terminated = on