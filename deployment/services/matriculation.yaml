apiVersion: "apps/v1"
kind: Deployment
metadata:
  namespace: uc4-lagom
  name: matriculation
spec:
  replicas: 1

  selector:
    matchLabels:
      app: matriculation

  template:
    metadata:
      namespace: uc4-lagom
      labels:
        app: matriculation
    spec:
      containers:
        - name: matriculation
          image: "uc4official/matriculation_service:latest"
          imagePullPolicy: Always
          env:
            - name: JAVA_OPTS
              value: "-Xms256m -Xmx256m -Dconfig.resource=prod-application.conf"
            - name: APPLICATION_SECRET
              valueFrom:
                secretKeyRef:
                  name: application-secret
                  key: secret
            - name: KAFKA_SERVICE_NAME
              value: "_tcp-clients._tcp.strimzi-kafka-brokers.kafka"
            - name: REQUIRED_CONTACT_POINT_NR
              value: "1"
            - name: HYPERLEDGER_WALLET_PATH
              value: /opt/docker/share/hyperledger/wallet_path
            - name: HYPERLEDGER_NETWORK_DESCRIPTION_PATH
              value: /var/lib/hyperledger/data/api/connection_profile_kubernetes.yaml
            - name: HYPERLEDGER_TLS_CERT
              value: /var/lib/hyperledger/data/api/ca-cert.pm
            - name: HYPERLEDGER_USERNAME
              value: scala-admin-org1
            - name: HYPERLEDGER_PASSWORD
              value: scalaAdminPW
            - name: HYPERLEDGER_ORGANISATION_ID
              value: org1MSP
            - name: HYPERLEDGER_CHANNEL
              value: mychannel
            - name: HYPERLEDGER_CHAINCODE
              value: uc4-cc
            - name: HYPERLEDGER_CA_URL
              value: "https://rca-org1.hlf-production-network:7054"
          resources:
            limits:
              memory: 512Mi
            requests:
              cpu: 0.25
              memory: 512M
          ports:
            - name: management
              containerPort: 8558
          volumeMounts:
            - name: hyperledgerdata
              mountPath: /var/lib/hyperledger/data
          readinessProbe:
            httpGet:
              path: "/ready"
              port: management
            periodSeconds: 10
            failureThreshold: 10
            initialDelaySeconds: 20
          livenessProbe:
            httpGet:
              path: "/alive"
              port: management
            periodSeconds: 10
            failureThreshold: 10
            initialDelaySeconds: 20
      volumes:
        - name: hyperledgerdata
          persistentVolumeClaim:
            claimName: matriculation-pv-claim
---
apiVersion: v1
kind: Service
metadata:
  namespace: uc4-lagom
  name: matriculation
spec:
  ports:
    - name: http
      port: 80
      targetPort: 9000
  selector:
    app: matriculation
  type: LoadBalancer
